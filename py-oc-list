#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

import os
import configparser
import owncloud  # pip install pyocclient
from urllib.error import HTTPError
import importlib
import sys
from pathlib import Path

importlib.reload(sys)


# Class for parsing config .cfg file
class Settings(object):

    def __init__(self, configfile):
        self.config = configparser.ConfigParser(interpolation=None)
        self.config.read(configfile)

    def load(self, section, opts):
        try:
            for key in opts:
                try:
                    setattr(self, key, self.config.get(section, key))
                except configparser.NoOptionError:
                    setattr(self, key, self.config.get('default', key))

        except configparser.NoSectionError:
            print(f'The section "{section}" does not exist')
        except configparser.NoOptionError:
            print(f'The value for "{key}" is missing')
        else:
            return True
        return False


cfg_forum = 'dctrad'

cfg_opts = ['host',
            'username',
            'password'
            ]


owncloud_cfg = '.owncloud.cfg'

home = str(Path.home())
owncloud_cfg_home = os.path.join(home, owncloud_cfg)

if os.path.isfile(owncloud_cfg):
    print(f"./{owncloud_cfg} found")
    use_cfg = owncloud_cfg
elif os.path.isfile(owncloud_cfg_home):
    print(f"{owncloud_cfg_home} found")
    use_cfg = owncloud_cfg_home
else:
    print("not found, either in local folder, or in home folder")
    print(f"Rename {owncloud_cfg}.exemple in {owncloud_cfg}")
    print("and put it in your HOME or your working folder")

cfg = Settings(use_cfg)
if cfg.load(cfg_forum, cfg_opts):
    oc = owncloud.Client(cfg.host)
    oc.login(cfg.username, cfg.password)

    print('--------------------------------------------------------------')
    print('     Loged in Owncloud ')
    print('--------------------------------------------------------------')

    try:
        folder_path = '/'
        folder_name = ''

        list_dir = oc.list(folder_path, depth=15)
        folder_list = []
        for file in list_dir:
            if file.is_dir():
                name = file.get_name()
                path = file.get_path()
                folder_list.append((path, name))
                print(path)

    except HTTPError as e:
        print(e.code)
    except owncloud.owncloud.HTTPResponseError:
        print("Dossier non valide")

    input("Pressez une touche pour quitter\n")
